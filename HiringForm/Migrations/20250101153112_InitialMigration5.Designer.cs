// <auto-generated />
using System;
using HiringForm.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HiringForm.Migrations
{
    [DbContext(typeof(HiringFormContext))]
    [Migration("20250101153112_InitialMigration5")]
    partial class InitialMigration5
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("HiringForm.Models.Entities.Applicant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("AdditionalNotes")
                        .HasColumnType("longtext");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Birthdate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Birthplace")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("EnglishLevel")
                        .HasColumnType("longtext");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsCalledToInterview")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsEliminated")
                        .HasColumnType("tinyint(1)");

                    b.Property<double>("KpssGrade")
                        .HasColumnType("double");

                    b.Property<string>("MaritalStatus")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("NumberOfLanguages")
                        .HasColumnType("int");

                    b.Property<string>("OtherProgrammingLanguages")
                        .HasColumnType("longtext");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Score")
                        .HasColumnType("int");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Tools")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Applicants");
                });

            modelBuilder.Entity("HiringForm.Models.Entities.Education", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("ApplicantId")
                        .HasColumnType("int");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Degree")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("SchoolName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("TimePeriod")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("ApplicantId");

                    b.ToTable("Educations");
                });

            modelBuilder.Entity("HiringForm.Models.Entities.Internship", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("ApplicantId")
                        .HasColumnType("int");

                    b.Property<string>("CompanyName")
                        .HasColumnType("longtext");

                    b.Property<string>("Duration")
                        .HasColumnType("longtext");

                    b.Property<string>("Position")
                        .HasColumnType("longtext");

                    b.Property<string>("Sector")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("ApplicantId");

                    b.ToTable("Internships");
                });

            modelBuilder.Entity("HiringForm.Models.Entities.KnownLanguage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ApplicantId")
                        .HasColumnType("int");

                    b.Property<string>("Language")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("ApplicantId");

                    b.ToTable("KnownLanguages");
                });

            modelBuilder.Entity("HiringForm.Models.Entities.ProgrammingLanguage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ApplicantId")
                        .HasColumnType("int");

                    b.Property<string>("Language")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("ApplicantId");

                    b.ToTable("ProgrammingLanguages");
                });

            modelBuilder.Entity("HiringForm.Models.Entities.WorkExperience", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("ApplicantId")
                        .HasColumnType("int");

                    b.Property<string>("CompanyName")
                        .HasColumnType("longtext");

                    b.Property<string>("Duration")
                        .HasColumnType("longtext");

                    b.Property<int?>("Experience")
                        .HasColumnType("int");

                    b.Property<string>("Position")
                        .HasColumnType("longtext");

                    b.Property<string>("Sector")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("ApplicantId");

                    b.ToTable("WorkExperiences");
                });

            modelBuilder.Entity("HiringForm.Models.Entities.Education", b =>
                {
                    b.HasOne("HiringForm.Models.Entities.Applicant", null)
                        .WithMany("Educations")
                        .HasForeignKey("ApplicantId");
                });

            modelBuilder.Entity("HiringForm.Models.Entities.Internship", b =>
                {
                    b.HasOne("HiringForm.Models.Entities.Applicant", null)
                        .WithMany("Internships")
                        .HasForeignKey("ApplicantId");
                });

            modelBuilder.Entity("HiringForm.Models.Entities.KnownLanguage", b =>
                {
                    b.HasOne("HiringForm.Models.Entities.Applicant", "Applicant")
                        .WithMany("KnownLanguages")
                        .HasForeignKey("ApplicantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Applicant");
                });

            modelBuilder.Entity("HiringForm.Models.Entities.ProgrammingLanguage", b =>
                {
                    b.HasOne("HiringForm.Models.Entities.Applicant", "Applicant")
                        .WithMany("ProgrammingLanguages")
                        .HasForeignKey("ApplicantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Applicant");
                });

            modelBuilder.Entity("HiringForm.Models.Entities.WorkExperience", b =>
                {
                    b.HasOne("HiringForm.Models.Entities.Applicant", null)
                        .WithMany("WorkExperiences")
                        .HasForeignKey("ApplicantId");
                });

            modelBuilder.Entity("HiringForm.Models.Entities.Applicant", b =>
                {
                    b.Navigation("Educations");

                    b.Navigation("Internships");

                    b.Navigation("KnownLanguages");

                    b.Navigation("ProgrammingLanguages");

                    b.Navigation("WorkExperiences");
                });
#pragma warning restore 612, 618
        }
    }
}
